#server config
server:
  port: 5022
  servlet:
    context-path: /truora
  config:
    # 服务版本
    version: v3.0.0


#log config
logging:
  config: classpath:log4j2.xml
  level.com.webank.oracle: info

# constant
constant:
  transMaxWait: 30
  restTemplateMaxWait: 30

spring:
  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    time-zone: "GMT+8"
    default-property-inclusion: non_null
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/truora?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: "[dbuser]"
    password: "[dbpassword]"
  flyway:
    enabled: false
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    openInView: false
  #  generate-ddl: true
    hibernate:
      ddl-auto: none
      session:
        events:
          log: false
    properties:
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false

############ add in v1.1.0 ############
contract:
  version: {oracleCoreVersion: 'v1.1.0', vrfCoreVersion: 'v1.1.0'}
    


# sdk
fiscobcos2sdk:
  orgName: orgTest
  corePoolSize: 50
  maxPoolSize: 100
  queueCapacity: 100
  timeout: 30000
  idleTimeout: 30000
  keepAlive: 60
  #0:standard, 1:guomi
  encryptType: 0

#key store
fiscobcos2userkey:
  store_file: "./key/ECC/keyStoreUser.txt"  #  k1 key file to save keyUser.
 #store_file: "./key/GM/keyStoreUser.txt"  # gm key file to save keyUser.

########################################################################
# 配置 Truora 连接的链和群组信息（证书和地址）:
#   1. 同一条链可以配置多个群组
#   2. 可以配置多条链
########################################################################
fiscobcos2channels:
  configs:
    ## 第一条链的连接信息，证书，群组列表和 IP:Port
    - chainId: 1
      caCert: classpath:ca.crt
      sslCert: classpath:sdk.crt
      sslKey: classpath:sdk.key
      all-channel-connections:
        - group-id: 1
          connections-str:
            # node listen_ip:channel_listen
            - 127.0.0.1:${FISCO_BCOS_PORT:20200}
        ## 群组 2 的信息
        #- group-id: 2
        #  connections-str:
        #    - 127.0.0.1:20200

    ## 第二条链的连接信息，证书，群组列表以及对应的 IP:Port
    #- chainId: 2
    #  caCert: classpath:2/ca.crt
    #  sslCert: classpath:2/node.crt
    #  sslKey: classpath:2/node.key
    #  all-channel-connections:
    #    - group-id: 1
    #      connections-str:
    #        - 127.0.0.1:20200




#fisco-bcos 2.2 or latest
#https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/sdk/java_sdk.html#id14
########################################################################
# 配置事件监听：
#   1. 配置 Truora 需要监听的链（ChainId）和群组（groupId）
#   2. 配置的 chainId 和 groupId 需要配置在 group-channel-connections-configs
########################################################################
fiscobcos2event:
  eventRegisters:
    # list of EventRegister objects. Use default value when property not configured.
    # Oracle contracts will be auto deployed when contractAddress is blank
    - {chainId: 1, groupId: 1}
    #- {chain: 1, group: 2}
    #- {chain: 2, group: 1}
    #- {chain: 2, group: 2}
    

#----------------------------------------------------------  
# fisco-bcos 3.x
#----------------------------------------------------------  
fiscobcos3:
  platform: fiscobcos3
  # 可忽略，每个chain/group可配置不同的key file
  defaultKeyfile: "./ECC/keyStoreUser.txt" 
  sdkconfigs:
    # 配置指向一到多个链/群组实例的sdk。
    # fisco bcos3.x版本的sdk使用独立的toml配置文件，每个链客户端实例写一个toml配置，里面可以配置连接多个节点
    chain0: bcos3sdk_config.toml
    #chain1: bcos3sdk_config_1.toml
  eventRegisters:
    # 配置一到多个chain/group的Oracle/VRF监听服务，如果数据库里没有合约地址记录，会做自动部署
    - chainId: chain0
      groupId: group0
      oracleCoreAddress: 
      vrfCoreAddress: 
      fromBlock:
      toBlock:
      #为每个监听实例指定不同的keyflie
      keyfile: "./ECC/keyStoreUser.txt" 
    #- chainId: chain1
    #  groupId: group1
    #  oracleCoreAddress: '0x123'
    #  vrfCoreAddress: '0x456'
      
#-------------------------------------
# 供测试和体验的一些配置，仅供参考      
dapps:
  APISample:
    chainId: chain0
    groupId: group0
    contractAddress: 
    lastaddress: ''
    url: plain(https://www.random.org/integers/?num=10&min=1&max=1000&col=1&base=10&format=plain&rnd=new)
  APISampleString:
    contractAddress: ''
    url: plain(https://www.random.org/integers/?num=10&min=1&max=1000&col=1&base=10&format=plain&rnd=new)
      